<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="Heater" Id="{fe81cd62-8fb3-4eb5-8579-8abf8e5327d3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Heater
VAR_INPUT
	iWaterTemp : REAL;
END_VAR
VAR_OUTPUT
	oHeaterEnable : BOOL;
	oHeaterPower : REAL;
END_VAR
VAR_IN_OUT
	ioHeatStruct : THeater;
END_VAR
VAR
	pidParameters : ST_CTRL_PID_PARAMS; 

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[pidParameters.fKp := 2.422; //10.0;
pidParameters.tTn := T#90S; //T#2S; //T#231.6S; -puvodni hodnota po navrhu
pidParameters.tTv := T#0MS;//T#0.5S;
pidParameters.tCtrlCycleTime := T#200MS;
pidParameters.tTaskCycleTime := T#100MS;
pidParameters.fOutMaxLimit := 100.0;
pidParameters.fOutMinLimit := 0.0;

ioHeatStruct.PID(
    fSetpointValue := ioHeatStruct.ParamHeatingSetPointAutomat,
    fActualValue := iWaterTemp,
    fManSyncValue := ioHeatStruct.ParamHeatingPowerManual,
    bSync := ioHeatStruct.State.ManCtrl,
    eMode := E_CTRL_MODE.eCTRL_MODE_ACTIVE,
    stParams := pidParameters
);

ioHeatStruct.State.HeatingOut := ioHeatStruct.PID.fOut;

oHeaterEnable := ioHeatStruct.State.EnableOut;
oHeaterPower := ioHeatStruct.State.HeatingOut;

{region "Manual/Automat"}
// switching state of engine - automatic or manual control (default state is manual)
IF ioHeatStruct.Cmd.AutCtrl THEN
    ioHeatStruct.State.AutCtrl := TRUE;
    ioHeatStruct.State.ManCtrl := FALSE;
END_IF;

IF ioHeatStruct.Cmd.ManCtrl THEN
    ioHeatStruct.State.AutCtrl := FALSE;
    ioHeatStruct.State.ManCtrl := TRUE;
END_IF;

IF NOT ioHeatStruct.State.AutCtrl AND NOT ioHeatStruct.State.ManCtrl THEN
    ioHeatStruct.State.ManCtrl := TRUE;
END_IF;

// Reset příkazů
ioHeatStruct.Cmd.AutCtrl := FALSE;
ioHeatStruct.Cmd.ManCtrl := FALSE;
{endregion}

{region "ManCtrl"}
// processing manual actions - if command is processed, it is set to FALSE even if can't be processed
// Engine commands are turn off (stop) and turn on (start)
IF ioHeatStruct.State.ManCtrl THEN
    IF ioHeatStruct.Cmd.TurnOnMan THEN
        ioHeatStruct.State.EnableOut := TRUE;
    END_IF;

    IF ioHeatStruct.Cmd.TurnOffMan THEN
        ioHeatStruct.State.EnableOut := FALSE;
    END_IF;

    // Reset manuálních příkazů
    ioHeatStruct.Cmd.TurnOnMan := FALSE;
    ioHeatStruct.Cmd.TurnOffMan := FALSE;
END_IF;
{endregion}

{region "AutCtrl"}
//if request to run in automatic mode set outputs to right states if MAR
//AutoRequest shouldn't be reseted to false state
IF ioHeatStruct.State.AutCtrl THEN
    ioHeatStruct.State.EnableOut := ioHeatStruct.Cmd.Req2RunAutCtrl;
END_IF;

// Reset automatického požadavku
ioHeatStruct.Cmd.Req2RunAutCtrl := FALSE;
{endregion}

{region "Error states"}
// if water temperature is too high, stop heating and generate error
IF iWaterTemp > Global.maxWaterTemp THEN
    ioHeatStruct.State.Err := TRUE;
    ioHeatStruct.State.GenErr := TRUE;
    ioHeatStruct.State.EnableOut := FALSE;
END_IF;
{endregion}

{region "StatusInt"}
IF NOT ioHeatStruct.State.GenErr THEN
    IF ioHeatStruct.State.EnableOut THEN
        ioHeatStruct.State.StateInt := Global.Running;
    ELSE
        ioHeatStruct.State.StateInt := Global.Stop;
    END_IF;
ELSE
    ioHeatStruct.State.StateInt := Global.Err;
END_IF;
{endregion}
]]></ST>
    </Implementation>
    <LineIds Name="Heater">
      <LineId Id="774" Count="6" />
      <LineId Id="782" Count="10" />
      <LineId Id="794" Count="25" />
      <LineId Id="882" Count="0" />
      <LineId Id="820" Count="16" />
      <LineId Id="883" Count="0" />
      <LineId Id="837" Count="18" />
      <LineId Id="857" Count="9" />
      <LineId Id="260" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>